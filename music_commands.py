"""
–ú–æ–¥—É–ª—å —Å –∫–æ–º–∞–Ω–¥–∞–º–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º—É–∑—ã–∫–æ–π.
–†–µ–∞–ª–∏–∑—É–µ—Ç –∫–ª–∞—Å—Å Music –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º—É–∑—ã–∫–∞–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ Discord –±–æ—Ç–∞.
"""

import discord
from discord.ext import commands
from player import MusicPlayer
from ytdl_source import YTDLSource
from config import find_ffmpeg

class Music(commands.Cog):
    """–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º—É–∑—ã–∫–æ–π."""
    
    def __init__(self, bot):
        self.bot = bot
        self.players = {}
        self.ffmpeg_path = find_ffmpeg()
    
    async def cleanup(self, guild):
        """–û—á–∏—â–∞–µ—Ç —Ä–µ—Å—É—Ä—Å—ã –∏ –æ—Ç–∫–ª—é—á–∞–µ—Ç—Å—è –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞."""
        try:
            await guild.voice_client.disconnect()
        except AttributeError:
            pass
        
        try:
            del self.players[guild.id]
        except KeyError:
            pass
    
    def get_player(self, ctx):
        """–ü–æ–ª—É—á–∞–µ—Ç –∏–ª–∏ —Å–æ–∑–¥–∞–µ—Ç –ø–ª–µ–µ—Ä –¥–ª—è –≥–∏–ª—å–¥–∏–∏."""
        try:
            player = self.players[ctx.guild.id]
        except KeyError:
            player = MusicPlayer(ctx)
            self.players[ctx.guild.id] = player
        
        return player
    
    @commands.command(name='join', help='–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ—Ç—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É')
    async def join(self, ctx):
        """–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ—Ç—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
        if ctx.author.voice is None:
            return await ctx.send("–í—ã –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É.")
    
        destination = ctx.author.voice.channel
    
        if ctx.voice_client:
            await ctx.voice_client.move_to(destination)
        else:
            await destination.connect()
    
        await ctx.send(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ –∫–∞–Ω–∞–ª—É: {destination.name}")

    @commands.command(name='play', help='–í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç –º—É–∑—ã–∫—É –∏–∑ YouTube')
    async def play(self, ctx, *, url):
        """–í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç –∏–ª–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç —Ç—Ä–µ–∫ –≤ –æ—á–µ—Ä–µ–¥—å."""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥–∫–ª—é—á–µ–Ω –ª–∏ –±–æ—Ç –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É
        if not ctx.voice_client:
            await ctx.invoke(self.join)
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–ª–µ–µ—Ä –¥–ª—è —ç—Ç–æ–π –≥–∏–ª—å–¥–∏–∏
        player = self.get_player(ctx)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        searching_message = await ctx.send("üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∑–∞–ø—Ä–æ—Å...")
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∏–ª–∏ URL
        async with ctx.typing():
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ URL –ø–ª–µ–π–ª–∏—Å—Ç–æ–º
                is_playlist = False
                if url.startswith(('http://', 'https://')):
                    is_playlist = await YTDLSource.is_playlist(url, loop=self.bot.loop)
                
                if is_playlist:
                    await searching_message.edit(
                        content=f'‚ÑπÔ∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω –ø–ª–µ–π–ª–∏—Å—Ç YouTube. –î–æ–±–∞–≤–ª—è—é —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–π —Ç—Ä–µ–∫. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `!playlist {url}` –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ–≥–æ –ø–ª–µ–π–ª–∏—Å—Ç–∞.'
                    )
                
                # –ü–æ–ª—É—á–∞–µ–º –∞—É–¥–∏–æ-–∏—Å—Ç–æ—á–Ω–∏–∫
                source = await YTDLSource.from_url(
                    url, 
                    loop=self.bot.loop, 
                    stream=True,
                    ffmpeg_path=self.ffmpeg_path,
                    process_playlist=False  # –ù–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–ª–µ–π–ª–∏—Å—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é
                )
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –ø–æ–∏—Å–∫–∞
                await searching_message.edit(
                    content=f'‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –æ—á–µ—Ä–µ–¥—å: **{source.title}**{source.duration_string}'
                )
                
                # –î–æ–±–∞–≤–ª—è–µ–º –≤ –æ—á–µ—Ä–µ–¥—å
                await player.queue.put(source)
            
            except ValueError as e:
                await searching_message.edit(
                    content=f'‚ùå –û—à–∏–±–∫–∞: {str(e)}\nüí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π —Ç—Ä–µ–∫ –∏–ª–∏ –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –Ω–∞ YouTube'
                )
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–∏: {e}")
            
            except Exception as e:
                await searching_message.edit(
                    content=f'‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)[:100]}...\n'
                    f'üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π —Ç—Ä–µ–∫ –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞'
                )
                print(f"–ü–æ–¥—Ä–æ–±–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
    
    @commands.command(name='playlist', help='–í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç –≤–µ—Å—å –ø–ª–µ–π–ª–∏—Å—Ç YouTube')
    async def playall(self, ctx, *, url):
        """–í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç –≤–µ—Å—å –ø–ª–µ–π–ª–∏—Å—Ç YouTube."""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥–∫–ª—é—á–µ–Ω –ª–∏ –±–æ—Ç –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É
        if not ctx.voice_client:
            await ctx.invoke(self.join)
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–ª–µ–µ—Ä –¥–ª—è —ç—Ç–æ–π –≥–∏–ª—å–¥–∏–∏
        player = self.get_player(ctx)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        searching_message = await ctx.send("üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –ø–ª–µ–π–ª–∏—Å—Ç...")
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º URL –ø–ª–µ–π–ª–∏—Å—Ç–∞
        async with ctx.typing():
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –ø–ª–µ–π–ª–∏—Å—Ç–æ–º
                is_playlist = False
                if url.startswith(('http://', 'https://')):
                    is_playlist = await YTDLSource.is_playlist(url, loop=self.bot.loop)
                
                if not is_playlist:
                    # –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–ª–µ–π–ª–∏—Å—Ç, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ –æ–±—ã—á–Ω—ã–π —Ç—Ä–µ–∫
                    source = await YTDLSource.from_url(
                        url, 
                        loop=self.bot.loop, 
                        stream=True,
                        ffmpeg_path=self.ffmpeg_path
                    )
                    
                    await searching_message.edit(
                        content=f'‚ÑπÔ∏è –≠—Ç–æ –Ω–µ –ø–ª–µ–π–ª–∏—Å—Ç. –î–æ–±–∞–≤–ª–µ–Ω —Ç—Ä–µ–∫: **{source.title}**{source.duration_string}'
                    )
                    
                    await player.queue.put(source)
                    return
                
                # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç—Ä–µ–∫–∏ –∏–∑ –ø–ª–µ–π–ª–∏—Å—Ç–∞
                playlist_title, tracks = await YTDLSource.get_playlist_items(
                    url,
                    loop=self.bot.loop,
                    ffmpeg_path=self.ffmpeg_path
                )
                
                if not tracks:
                    await searching_message.edit(
                        content=f'‚ùå –ü–ª–µ–π–ª–∏—Å—Ç –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç—Ä–µ–∫–æ–≤ –∏–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∏—Ö –∏–∑–≤–ª–µ—á—å.'
                    )
                    return
                
                # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —Ç—Ä–µ–∫–∏ –≤ –æ—á–µ—Ä–µ–¥—å
                for track in tracks:
                    await player.queue.put(track)
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
                await searching_message.edit(
                    content=f'‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –ø–ª–µ–π–ª–∏—Å—Ç: **{playlist_title}** ({len(tracks)} —Ç—Ä–µ–∫–æ–≤)'
                )
            
            except ValueError as e:
                await searching_message.edit(
                    content=f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–ª–µ–π–ª–∏—Å—Ç–∞: {str(e)}\nüí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–ª–µ–π–ª–∏—Å—Ç.'
                )
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–∏ –ø–ª–µ–π–ª–∏—Å—Ç–∞: {e}")
            
            except Exception as e:
                await searching_message.edit(
                    content=f'‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)[:100]}...\n'
                    f'üí° –í–æ–∑–º–æ–∂–Ω–æ, –ø–ª–µ–π–ª–∏—Å—Ç —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.'
                )
                print(f"–ü–æ–¥—Ä–æ–±–Ω–∞—è –æ—à–∏–±–∫–∞ –ø–ª–µ–π–ª–∏—Å—Ç–∞: {e}")
    
    @commands.command(name='pause', help='–ü—Ä–∏–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫')
    async def pause(self, ctx):
        """–°—Ç–∞–≤–∏—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –Ω–∞ –ø–∞—É–∑—É."""
        voice_client = ctx.voice_client
        
        if not voice_client or not voice_client.is_playing():
            return await ctx.send("–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è.")
        
        if voice_client.is_paused():
            return await ctx.send("–¢—Ä–µ–∫ —É–∂–µ –Ω–∞ –ø–∞—É–∑–µ.")
        
        voice_client.pause()
        await ctx.send("‚è∏Ô∏è –ü–∞—É–∑–∞")
    
    @commands.command(name='resume', help='–í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ç—Ä–µ–∫–∞')
    async def resume(self, ctx):
        """–í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ç—Ä–µ–∫–∞ –ø–æ—Å–ª–µ –ø–∞—É–∑—ã."""
        voice_client = ctx.voice_client
        
        if not voice_client or not voice_client.is_connected():
            return await ctx.send("–Ø –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É.")
        
        if not voice_client.is_paused():
            return await ctx.send("–¢—Ä–µ–∫ –Ω–µ –Ω–∞ –ø–∞—É–∑–µ.")
        
        voice_client.resume()
        await ctx.send("‚ñ∂Ô∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ")
    
    @commands.command(name='skip', help='–ü—Ä–æ–ø—É—Å–∫–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫')
    async def skip(self, ctx):
        """–ü—Ä–æ–ø—É—Å–∫–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ —Å–ª–µ–¥—É—é—â–µ–º—É."""
        voice_client = ctx.voice_client
        
        if not voice_client or not voice_client.is_connected():
            return await ctx.send("–Ø –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É.")
        
        if not voice_client.is_playing():
            return await ctx.send("–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è.")
        
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫
        voice_client.stop()
        await ctx.send("‚è≠Ô∏è –¢—Ä–µ–∫ –ø—Ä–æ–ø—É—â–µ–Ω")
    
    @commands.command(name='loop', help='–í–∫–ª—é—á–∞–µ—Ç/–≤—ã–∫–ª—é—á–∞–µ—Ç –ø–æ–≤—Ç–æ—Ä —Ç–µ–∫—É—â–µ–≥–æ —Ç—Ä–µ–∫–∞')
    async def toggle_loop(self, ctx):
        """–í–∫–ª—é—á–∞–µ—Ç –∏–ª–∏ –≤—ã–∫–ª—é—á–∞–µ—Ç –ø–æ–≤—Ç–æ—Ä —Ç–µ–∫—É—â–µ–≥–æ —Ç—Ä–µ–∫–∞."""
        player = self.get_player(ctx)
        player.loop = not player.loop
        
        status = "–≤–∫–ª—é—á–µ–Ω" if player.loop else "–≤—ã–∫–ª—é—á–µ–Ω"
        await ctx.send(f"üîÑ –ü–æ–≤—Ç–æ—Ä —Ç—Ä–µ–∫–∞ {status}")
    
    @commands.command(name='queue', help='–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—á–µ—Ä–µ–¥—å —Ç—Ä–µ–∫–æ–≤')
    async def queue_info(self, ctx):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ç–µ–∫—É—â—É—é –æ—á–µ—Ä–µ–¥—å —Ç—Ä–µ–∫–æ–≤."""
        player = self.get_player(ctx)
        
        if player.queue.empty():
            return await ctx.send("üìã –û—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞.")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç—Ä–µ–∫–∏ –∏–∑ –æ—á–µ—Ä–µ–¥–∏ –±–µ–∑ –∏—Ö –∏–∑–≤–ª–µ—á–µ–Ω–∏—è
        queue_list = list(player.queue._queue)
        
        # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç—Ä–µ–∫–∞—Ö (–¥–æ 10 —Ç—Ä–µ–∫–æ–≤)
        queue_message = "**üìã –û—á–µ—Ä–µ–¥—å —Ç—Ä–µ–∫–æ–≤:**\n"
        for i, track in enumerate(queue_list[:10], 1):
            queue_message += f"{i}. {track.title}{track.duration_string}\n"
        
        if len(queue_list) > 10:
            queue_message += f"... –∏ –µ—â–µ {len(queue_list) - 10} —Ç—Ä–µ–∫–æ–≤"
        
        await ctx.send(queue_message)
    
    @commands.command(name='now', help='–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫')
    async def now_playing(self, ctx):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º —Ç—Ä–µ–∫–µ."""
        voice_client = ctx.voice_client
        
        if not voice_client or not voice_client.is_connected():
            return await ctx.send("–Ø –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É.")
        
        player = self.get_player(ctx)
        if not voice_client.is_playing():
            return await ctx.send("–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è.")
        
        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º —Ç—Ä–µ–∫–µ
        source = voice_client.source
        await ctx.send(f"üéµ –°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç: **{source.title}**{source.duration_string}")
    
    @commands.command(name='stop', help='–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–ª–µ–µ—Ä –∏ –æ—á–∏—â–∞–µ—Ç –æ—á–µ—Ä–µ–¥—å')
    async def stop(self, ctx):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∏ –æ—á–∏—â–∞–µ—Ç –æ—á–µ—Ä–µ–¥—å."""
        voice_client = ctx.voice_client
        
        if not voice_client or not voice_client.is_connected():
            return await ctx.send("–Ø –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É.")
        
        # –û—á–∏—â–∞–µ–º –æ—á–µ—Ä–µ–¥—å –∏ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
        await self.cleanup(ctx.guild)
        await ctx.send("‚èπÔ∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏ –æ—á–µ—Ä–µ–¥—å –æ—á–∏—â–µ–Ω–∞")
    
    @commands.command(name='leave', help='–û—Ç–∫–ª—é—á–∞–µ—Ç—Å—è –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞')
    async def leave(self, ctx):
        """–û—Ç–∫–ª—é—á–∞–µ—Ç—Å—è –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞."""
        voice_client = ctx.voice_client
        
        if not voice_client or not voice_client.is_connected():
            return await ctx.send("–Ø –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É.")
        
        await self.cleanup(ctx.guild)
        await ctx.send("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
    
    @play.before_invoke
    async def ensure_voice(self, ctx):
        """–£–±–µ–∂–¥–∞–µ—Ç—Å—è, —á—Ç–æ –±–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É."""
        if ctx.voice_client is None:
            if ctx.author.voice:
                await ctx.author.voice.channel.connect()
            else:
                await ctx.send("–í—ã –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É.")
                raise commands.CommandError("–ê–≤—Ç–æ—Ä –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É.")